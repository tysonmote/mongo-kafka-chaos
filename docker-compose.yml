version: '3'
services:

  mongo1:
    image: mongo:4.4
    container_name: mongo1
    command: mongod --port 27017 --replSet rs
    volumes:
      - ./scripts:/scripts
    networks:
      - localnet
    restart: always

  mongo2:
    image: mongo:4.4
    container_name: mongo2
    command: mongod --port 27017 --replSet rs
    volumes:
      - ./scripts:/scripts
    networks:
      - localnet
    restart: always

  mongo3:
    image: mongo:4.4
    container_name: mongo3
    command: mongod --port 27017 --replSet rs
    volumes:
      - ./scripts:/scripts
    networks:
      - localnet
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper
    networks:
      - localnet
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  kafka1:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka1
    depends_on:
      - zookeeper
    networks:
      - localnet
    environment:
      BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_SCHEDULED_REBALANCE_MAX_DELAY_MS: 1000
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    restart: always

  kafka2:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka2
    depends_on:
      - zookeeper
    networks:
      - localnet
    environment:
      BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_SCHEDULED_REBALANCE_MAX_DELAY_MS: 1000
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    restart: always

  kafka3:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka3
    depends_on:
      - zookeeper
    networks:
      - localnet
    environment:
      BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_SCHEDULED_REBALANCE_MAX_DELAY_MS: 1000
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    restart: always

  connect:
    build:
      context: .
      dockerfile: Dockerfile.connect
    volumes:
      - ./scripts:/scripts
    container_name: connect
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
    networks:
      - localnet
    environment:
      KAFKA_JMX_PORT: 35000
      KAFKA_JMX_HOSTNAME: localhost
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONNECT_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONNECTIONS_MAX_IDLE_MS: 180000
      CONNECT_EXACTLY_ONCE_SOURCE_SUPPORT: "enabled"
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_METADATA_MAX_AGE_MS: 180000
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_ZOOKEEPER_CONNECT: "zookeeper:2181"
    restart: always

  # rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.4.1
  #   depends_on:
  #     - zookeeper
  #     - kafka1
  #     - kafka2
  #     - kafka3
  #     - schema-registry
  #   container_name: rest-proxy
  #   networks:
  #     - localnet
  #   environment:
  #     KAFKA_REST_HOST_NAME: rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
  #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:7.4.1
  #   container_name: schema-registry
  #   depends_on:
  #     - kafka1
  #     - kafka2
  #     - kafka3
  #   networks:
  #     - localnet
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka1:9092,PLAINTEXT://kafka2:9092,PLAINTEXT://kafka3:9092"
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  generator:
    image: python:3
    command: bash -c 'sleep 15 && /scripts/generate-events.sh'
    volumes:
      - ./scripts:/scripts
    networks:
      - localnet
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    restart: always

  consumer:
    image: python:3
    command: bash -c 'sleep 15 && /scripts/consume-events.sh'
    volumes:
      - ./scripts:/scripts
    networks:
      - localnet
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    restart: always

networks:
  localnet:
    attachable: true
